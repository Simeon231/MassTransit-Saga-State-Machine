@using MassTransit
@using MasterDegreeDemo.EventReceiver2.Consumers
@using MasterDegreeDemo.ServiceDefaults

@page "/"

@implements IDisposable

@inject IPublishEndpoint PublishEndpoint

@rendermode InteractiveServer

<PageTitle>Payment</PageTitle>

<div class="container d-flex flex-column gap-2">
    <h1>Payment</h1>
    @if (order is null)
    {
        <h3>Nothing received</h3>
    }
    else
    {
        <h3>@order.ProductName product received</h3>
        <button @onclick="PayOrder" class="btn btn-success">Pay</button>
        <button @onclick="DeclineOrder" class="btn btn-danger">Decline</button>
    }
</div>

@code {
    private Order? order;

    protected override void OnInitialized()
    {
        ProcessOrderPaymentConsumer.OnReceived += OrderReserved;
    }

    public void Dispose()
    {
        ProcessOrderPaymentConsumer.OnReceived -= OrderReserved;
    }

    private void OrderReserved(Order orderReserved)
    {
        this.order = orderReserved;

        InvokeAsync(base.StateHasChanged);
    }

    private void PayOrder()
    {
        if (order is null)
        {
            return;
        }

        ProcessOrderPaymentConsumer.Resume.SetResult(true);

        order = null;
    }

    private void DeclineOrder()
    {
        if (order is null)
        {
            return;
        }

        ProcessOrderPaymentConsumer.Resume.SetResult(false);

        order = null;
    }
}
